{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO6lbCW5xf+01GuTVrUzUvs",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Caioba123/Aula-Phyton/blob/main/Dia_01_10\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 1"
      ],
      "metadata": {
        "id": "O7IZiqk7eJ7H"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "CtDeqXO3PsON"
      },
      "outputs": [],
      "source": [
        "print(\"Olá!\")\n",
        "print(\"Seja Bem Vindo!\")\n",
        "print(\"Confira os preços abaixo:\")\n",
        "\n",
        "print(\"Arroz: R$ 9,00\")\n",
        "print(\"Feijão: R$ 12,00\")\n",
        "print(\"Carne: R$ 30,00 por KG\")\n",
        "print(\"Macarrão: R$ 5,00\")\n",
        "\n",
        "valorArroz = 6.99\n",
        "valorFeijão = 4.99\n",
        "valorCarne = 35.00\n",
        "valorMacarrão = 3.99\n",
        "\n",
        "if valorArroz < 9.00:\n",
        "    print(\"O valor do arroz está abaixo da média.\")\n",
        "else:\n",
        "    print(\"O valor do arroz está acima da média.\")\n",
        "\n",
        "\n",
        "if valorFeijão < 12.00:\n",
        "    print(\"O valor do feijão está abaixo da média.\")\n",
        "else:\n",
        "    print(\"O valor do feijão está acima da média.\")\n",
        "\n",
        "\n",
        "if valorCarne < 30.00:\n",
        "    print(\"O valor da carne está abaixo da média.\")\n",
        "else:\n",
        "    print(\"O valor da carne está acima da média.\")\n",
        "\n",
        "\n",
        "if valorMacarrão < 5.00:\n",
        "    print(\"O valor do macarrão está abaixo da média.\")\n",
        "else:\n",
        "    print(\"O valor do macarrão está acima da média\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 2"
      ],
      "metadata": {
        "id": "Y6t4_P1Od9e4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numero1 = input(\"Entre com um número:\")\n",
        "\n",
        "if numero1 > 0:\n",
        "  print(\"O número é positivo\")\n",
        "if\n",
        "  print(\"O número é negativo\")\n",
        "else\n",
        "  print(\"O número não existe\")\n",
        "\n",
        "\n",
        "\n",
        " if numero1 % 2 == 0:\n",
        "  print(\"O número é par\")\n",
        " else:\n",
        "  print(\"O numero é impar\")\n"
      ],
      "metadata": {
        "id": "UKOwIf_mW6QF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "3 Questão"
      ],
      "metadata": {
        "id": "9nrYcRN9bRRA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = input(\"Entre com a primeira nota: \")\n",
        "n2 = input(\"Entre com a segunda nota: \")\n",
        "n3 = input(\"Entre com a terceira nota: \")\n",
        "n4 = input(\"Entre com a quarta nota: \")\n",
        "\n",
        "n1 = int(n1)\n",
        "n2 = int(n2)\n",
        "n3 = int(n3)\n",
        "n4 = int(n4)\n",
        "\n",
        "\n",
        "resultado = n1 + n2 + n3 + n4\n",
        "média = resultado / 4\n",
        "\n",
        "print(\"A média é:\", média)\n",
        "\n",
        "if média == 10:\n",
        "  print(\"Aprovado com louvor\")\n",
        "if média >= 7:\n",
        "  print(\"Aprovado\")\n",
        "else:\n",
        "  print(\"Reprovado\")\n"
      ],
      "metadata": {
        "id": "tA07q3dxbVSv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 4"
      ],
      "metadata": {
        "id": "uBZq6HTgdhLC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fah = input(\"Diga a temperatura em fahrenheit:\")\n",
        "\n",
        "fah = int(fah)\n",
        "\n",
        "celsius = (5 * (fah - 32)) //9\n",
        "\n",
        "print(\"Temperatura em fahrenheit\" , fah , \"°F\")\n",
        "print(\"Temperatura convertida para Ceslsius\" , celsius , \"°C\")"
      ],
      "metadata": {
        "id": "XyKRoASSdlZA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 5"
      ],
      "metadata": {
        "id": "M5H4mpjufVtt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def calcular_votos():\n",
        "\n",
        "    num_votantes = int(input(\"Informe o número total de votantes: \"))\n",
        "\n",
        "\n",
        "    votos_candidato_1 = 0\n",
        "    votos_candidato_2 = 0\n",
        "    votos_candidato_3 = 0\n",
        "\n",
        "\n",
        "    for i in range(num_votantes):\n",
        "        while True:\n",
        "\n",
        "            voto = int(input(f\"Voto do {i+1}º eleitor (1, 2 ou 3): \"))\n",
        "\n",
        "\n",
        "            if voto in [1, 2, 3]:\n",
        "                break\n",
        "            else:\n",
        "                print(\"Voto inválido! Por favor, vote apenas 1, 2 ou 3.\")\n",
        "\n",
        "\n",
        "        if voto == 1:\n",
        "            votos_candidato_1 += 1\n",
        "        elif voto == 2:\n",
        "            votos_candidato_2 += 1\n",
        "        elif voto == 3:\n",
        "            votos_candidato_3 += 1\n",
        "\n",
        "\n",
        "    print(\"\\nResultado da eleição:\")\n",
        "    print(f\"Candidato 1: {votos_candidato_1} votos\")\n",
        "    print(f\"Candidato 2: {votos_candidato_2} votos\")\n",
        "    print(f\"Candidato 3: {votos_candidato_3} votos\")\n",
        "\n",
        "# Chama a função\n",
        "calcular_votos()\n"
      ],
      "metadata": {
        "id": "uSHIXhWwfYYF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 6"
      ],
      "metadata": {
        "id": "7wra-AtKgiQD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Lista simulada de 50 pessoas\n",
        "pessoas = [ {\"altura\": 1.85, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.62, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.73, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.58, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.90, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.65, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.78, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.60, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.82, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.55, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.92, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.67, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.76, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.70, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.88, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.63, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.81, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.59, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.80, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.66, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.91, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.64, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.77, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.56, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.84, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.61, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.89, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.68, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.74, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.57, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.83, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.69, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.87, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.60, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.79, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.65, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.86, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.58, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.75, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.62, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.93, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.66, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.72, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.54, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.90, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.67, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.80, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.60, \"sexo\": \"F\"},\n",
        "    {\"altura\": 1.85, \"sexo\": \"M\"},\n",
        "    {\"altura\": 1.59, \"sexo\": \"F\"}, ]\n",
        "\n",
        "\n",
        "alturas = []\n",
        "soma_altura_mulheres = 0\n",
        "quant_mulheres = 0\n",
        "quant_homens = 0\n",
        "\n",
        "\n",
        "for pessoa in pessoas:\n",
        "    altura = pessoa[\"altura\"]\n",
        "    sexo = pessoa[\"sexo\"]\n",
        "\n",
        "    alturas.append(altura)\n",
        "\n",
        "    if sexo == \"F\":\n",
        "        soma_altura_mulheres += altura\n",
        "        quant_mulheres += 1\n",
        "    else:\n",
        "        quant_homens += 1\n",
        "\n",
        "\n",
        "maior_altura = max(alturas)\n",
        "menor_altura = min(alturas)\n",
        "media_altura_mulheres = soma_altura_mulheres / quant_mulheres if quant_mulheres > 0 else 0\n",
        "porcentagem_homens = (quant_homens / 50) * 100\n",
        "porcentagem_mulheres = (quant_mulheres / 50) * 100\n",
        "\n",
        "\n",
        "print(\"\\n===== RESULTADOS =====\")\n",
        "print(f\"Maior altura do grupo: {maior_altura:.2f} m\")\n",
        "print(f\"Menor altura do grupo: {menor_altura:.2f} m\")\n",
        "print(f\"Média de altura das mulheres: {media_altura_mulheres:.2f} m\")\n",
        "print(f\"Número total de homens: {quant_homens}\")\n",
        "print(f\"Porcentagem de homens: {porcentagem_homens:.1f}%\")\n",
        "print(f\"Porcentagem de mulheres: {porcentagem_mulheres:.1f}%\")\n"
      ],
      "metadata": {
        "id": "QlThX1oaglbJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 7"
      ],
      "metadata": {
        "id": "WOJ5Yg_mlnFB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "totalVendas = input(\"Digite abaixo o numero total das vendas da sua empresa: \")\n",
        "\n",
        "\n",
        "totalVendas = float(totalVendas)\n",
        "\n",
        "lucro = totalVendas * 0.23\n",
        "\n",
        "print(\"Levando em conta que apenas 23% representa o lucro, o retorno será de\" , lucro ,)"
      ],
      "metadata": {
        "id": "KVLp2-1-l4pA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 8"
      ],
      "metadata": {
        "id": "_ea6J0xFoB59"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def verifica_primo(num, divisor=2):\n",
        "    if num <= 1:\n",
        "        return False\n",
        "    if divisor > int(num**0.5):\n",
        "        return True\n",
        "    if num % divisor == 0:\n",
        "        return False\n",
        "    return verifica_primo(num, divisor + 1)\n",
        "\n",
        "num = int(input(\"Digite um número inteiro: \"))\n",
        "\n",
        "if verifica_primo(num):\n",
        "    print(f\"{num} é um número primo.\")\n",
        "else:\n",
        "    print(f\"{num} não é um número primo.\")\n",
        "\n"
      ],
      "metadata": {
        "id": "mUUMixg2oEAX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 9"
      ],
      "metadata": {
        "id": "Xx_qCBL6ppZs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def fatorial(n):\n",
        "    if n == 0 or n == 1:\n",
        "        return 1\n",
        "    else:\n",
        "        return n * fatorial(n - 1)\n",
        "\n",
        "numero = int(input(\"Digite um número: \"))\n",
        "print(\"OK, agora iremos fazer o fatorial dele\")\n",
        "\n",
        "resultado = fatorial(numero)\n",
        "print(f\"O fatorial de {numero} é {resultado}\")\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "ttmwkabjprmE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questão 10"
      ],
      "metadata": {
        "id": "i2vXuCpqqiby"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7prvT40Csaay"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}